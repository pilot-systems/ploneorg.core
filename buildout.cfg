[buildout]
extends =
    https://raw.github.com/collective/buildout.plonetest/master/test-5.0.x.cfg
#    http://dist.plone.org/release/5.1a1/versions.cfg
    http://dist.plone.org/release/5.1-latest/versions.cfg
    versions.cfg

parts +=
    omelette
    cli-scripts
    zopepy
    themepreview
    mrbob
    code-analysis
    codeintel
    coverage
    runcoverage

# do not let buildout choose any distribution randomly
allow-picked-versions = true
show-picked-versions = true
update-versions-file = versions.cfg

plone-series = 5.1
package-name = ploneorg.core
package-extras = [test, migration]

extensions = mr.developer

eggs +=
    ploneorg.core[migration,develop]
    authomatic
    plone.reload
    pas.plugins.authomatic
    collective.themefragments
    Products.PloneFormGen
    collective.recaptcha
    collective.isotope
    simplejson
    raven

    pdbpp
    Products.PDBDebugMode

always-checkout = force
auto-checkout +=
    collective.badge
    collective.transmogrifier
    collective.workspace
    plone.app.users
    plone.app.vulnerabilities
    ploneorg.migration
    ploneorg.theme
    ploneorg.addonlisting
    ploneorg.releasesecurityinfo
    Py-StackExchange
    quintagroup.transmogrifier
    pas.plugins.authomatic
    collective.isotope

[sources]
collective.badge = git git@github.com:collective/collective.badge.git
collective.roster = git https://github.com/collective/collective.roster.git pushurl=git@github.com:collective/collective.roster.git
collective.transmogrifier = git https://github.com/collective/collective.transmogrifier.git pushurl=git@github.com:collective/collective.transmogrifier.git
collective.workspace = git https://github.com/collective/collective.workspace.git pushurl=git@github.com:collective/collective.workspace.git branch=plone5
plone.app.users = git https://github.com/plone/plone.app.users.git pushurl=git@github.com:plone/plone.app.users.git
plone.app.vulnerabilities = git https://github.com/plone/plone.app.vulnerabilities.git pushurl=git@github.com:plone/plone.app.vulnerabilities.git
ploneorg.migration = git https://github.com/collective/ploneorg.migration.git pushurl=git@github.com:collective/ploneorg.migration.git
ploneorg.theme = git https://github.com/plone/ploneorg.theme.git pushurl=git@github.com:plone/ploneorg.theme.git
ploneorg.addonlisting = git https://github.com/plone/ploneorg.addonlisting.git pushurl=git@github.com:plone/ploneorg.addonlisting.git
ploneorg.releasesecurityinfo = git https://github.com/plone/ploneorg.releasesecurityinfo.git pushurl=git@github.com:plone/ploneorg.releasesecurityinfo.git
Py-StackExchange = git https://github.com/lucjon/Py-StackExchange.git
quintagroup.transmogrifier = git https://github.com/collective/quintagroup.transmogrifier.git pushurl=git@github.com:collective/quintagroup.transmogrifier.git branch=plone5
pas.plugins.authomatic = git https://github.com/collective/pas.plugins.authomatic.git pushurl=git@github.com:collective/pas.plugins.authomatic.git
collective.isotope = git https://github.com/collective/collective.isotope.git pushurl=git@github.com:collective/collective.isotope.git

[instance]
event-log-custom =
    %import raven.contrib.zope
    <logfile>
      path ${buildout:directory}/var/log/instance.log
      level INFO
    </logfile>
    <sentry>
      dsn https://75b1a7aebce7404c8a467b25b608a9e5:439368748d494f07b9e86b09419dc753@sentry.io/128640
      level WARN
    </sentry>

[omelette]
recipe = collective.recipe.omelette
eggs =
    ${instance:eggs}
    ${test:eggs}

[cli-scripts]
recipe = zc.recipe.egg:scripts
eggs =
    ploneorg.core
    ploneorg.addonlisting

[themepreview]
recipe = zc.recipe.egg
eggs =
    ${buildout:eggs}
    ${test:eggs}
    Sphinx
    sphinx-rtd-theme
    plone.app.robotframework
    sphinxcontrib-robotframework [docs]
scripts =
    sphinx-build

# Usage:
#
# ROBOT_CONFIGURE_PACKAGES=plone.app.widgets,ploneorg.core ROBOT_APPLY_PROFILES=ploneorg.core:default ROBOT_INSTALL_PRODUCTS=Products.DateRecurringIndex bin/sphinx-build src/plone.themepreview/source build

[zopepy]
# For more information on this step and configuration options see:
#
recipe = zc.recipe.egg
eggs = ${buildout:eggs}
interpreter = zopepy
scripts = zopepy

[mrbob]
recipe = zc.recipe.egg
eggs =
    mr.bob
    bobtemplates.plone

[code-analysis]
recipe = plone.recipe.codeanalysis
directory = ${buildout:directory}/ploneorg
utf8-header = True
prefer-single-quotes=True
imports = True
debug-statements = True
deprecated-aliases = True
zptlint = True

[codeintel]
recipe = corneti.recipes.codeintel
eggs = ${instance:eggs}
extra-paths =
    ${omelette:location}

[coverage]
recipe = zc.recipe.egg
eggs = coverage

[runcoverage]
recipe = collective.recipe.template
input = inline:
    bin/coverage run ./bin/test
    bin/coverage html
output = bin/runcoverage
mode = 755
